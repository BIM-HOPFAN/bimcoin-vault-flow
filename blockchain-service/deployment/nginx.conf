events {
    worker_connections 1024;
}

http {
    upstream blockchain_service {
        server blockchain-service:3000;
        # Add more instances for load balancing
        # server blockchain-service-2:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=webhooks:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=withdrawals:10m rate=1r/s;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    server {
        listen 80;
        server_name your-domain.com;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name your-domain.com;

        # SSL Configuration
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Request body size limit
        client_max_body_size 1M;

        # Logging
        access_log /var/log/nginx/blockchain-service.access.log;
        error_log /var/log/nginx/blockchain-service.error.log;

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Webhook endpoints (higher rate limit)
        location /webhook/ {
            limit_req zone=webhooks burst=20 nodelay;
            
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Webhook specific settings
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
        }

        # Withdrawal endpoints (strict rate limiting)
        location ~ ^/api/withdraw/ {
            limit_req zone=withdrawals burst=2 nodelay;
            
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Admin endpoints (IP whitelist)
        location /admin/ {
            # PRODUCTION: Add IP whitelist
            # allow 10.0.0.0/8;
            # allow 192.168.0.0/16;
            # deny all;
            
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # General API endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Metrics endpoint (internal only)
        location /metrics {
            # PRODUCTION: Restrict to monitoring systems only
            # allow 10.0.0.0/8;
            # deny all;
            
            proxy_pass http://blockchain_service:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Block all other requests
        location / {
            return 404;
        }
    }
}